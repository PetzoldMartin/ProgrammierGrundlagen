-----------------------------------------------------------------------------
# Skill Tags - Insert the following tags into Skill noteboxes.
# -----------------------------------------------------------------------------
# <skill type: phrase>
# Replace phrase with anything you want. This is used mostly for other tags.
# Inserting multiple of these tags will give it multiple types. By default,
# every skill will be affected by anything with the "ALL" category type.
# 
# <cast animation x> or <actor cast x> or <enemy cast x>
# This will give the skill a casting animation upon usage. If the first tag is
# used, the casting animation will be universal for both actors and enemies.
# If the actor/enemy tag is used rather than the first, they will have separate
# casting animations.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <cost mp x> <cost mp x%>
# This will allow you to change the MP cost of a skill to x. With this tag, it
# is possible to exceed MP cost of 9999 which was not previously doable in the
# editor. If added a % after the cost, the cost will be a direct x% of MaxMP.
# 
# <cost hp x> <cost hp x%>
# To make skills cost HP instead of MP, insert this tag into the notebox. Just
# like the above tag, if used n%, it will cost a percent of the MaxHP instead.
# 
# <cost gold x> <cost gold x%>
# This will cause skills to cost Gold instead of MP. However, with the x% tag,
# it will cost a percentage of the party's total gold. If the party's total
# gold is 0, the skill becomes unusuable.
# 
# <cost icon x>
# This can be used to change the skill's cost icon if you so happen to desire
# changing it into something else while keeping the basic skill cost effect.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <cost rage x>
# Rage is a new stat added with this script to function as a new skill currency
# for RPG's. Whenever battlers attack, use skills, or take damage, their rage
# goes up and allows them to use skills with a rage cost.
# 
# <rage boost +x> 
# When using a skill with this tag, the user will gain +n rage independent of
# the base rage gain bonus for certain skill types. Use a negative value to
# reduce rage after using.
# 
# <target rage +x> <target rage -x>
# This will cause the target to gain or lose n rage depending on the + or -
# tag used with the skill. Given rage has no influence by default settings.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <cooldown x>
# This will determine how many turns the battler must wait before the skill can
# be usable again after performing. Meanwhile, the skill is wholely disabled.
# 
# <limit use x>
# This will determine how many times a skill can be used per battle. Once a
# skill is used x times in battle, it becomes disabled for the remainder.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <instant cast>
# This causes the skill used to perform instantly without wasting the actor's
# turn. Immediately upon use, it will go back to the actor's command selection.
# If an enemy uses an instant skill, the enemy will get another turn.
# 
# <unreflectable>
# Skills with this tag cannot be reflected by reflectable states regardless of
# what kind of skill type the skill is.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <state require any: x> or <state require any: x,x>
# <state require all: x> or <state require all: x,x>
# This will require state x to be on the battler before the skill can be used.
# If the any keyword is used, only one of the states need to be present. If the
# all keyword is used, all of them must be present.
# 
# <element require any: x> or <element require any: x,x>
# <element require all: x> or <element require all: x,x>
# This will require the actor to have element x in the attack element set in
# order for the skill to be used. Best used for weapon skills that require a
# weapon element to use that said skill. Like the above, if the any keyword is
# used, only one of the elements need to be present. If all, then all need to
# be present for the skill to be used.
# 
# <switch require any: x> or <switch require any: x,x>
# <switch require all: x> or <switch require all: x,x>
# This will require the switch x to be true before the skill can be used. Great
# for disabling certain skills at certain points in the game for any reason.
# Like the above, if the any keyword is used, any of the switches could be on.
# If all keyword is used, all of the switches need to be on to use the skill.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <subskills: x,x>
# This will turn the skill in the skill menu into a subskill menu displaying
# all of the x,x skills listed inside of the tag. The subskills inside will
# only appear if the actor has learned the listed subskills. Subskill skills
# also cannot appear within the subskill window. Enemies can't use subskills
# for obvious reasons.
# 
# <subskill only>
# This will prevent the skill from appearing in the regular skill window, but
# it will appear in the subskill window instead.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <open chain x>
# This causes the chain window to appear and display all of the chainable
# skills available to the player. x is the maximum number of skills the player
# can chain. Open chains contain all of the player's skills that may be chained.
# 
# <closed chain x: phrase>
# Closed chains will also open up the chain window. Just like before, x is the
# maximum number of times the player can chain. However, closed chains will
# only allow the player to select skills of the phrase type. Place this tag
# inside of the skills you wish to display: <skill type: phrase> Insert multiple
# of these <closed chain x: phrase> tags to allow more skill types.
# 
# <forced chain x: y,y>
# Forced chains are very picky and only allow certain skills to be chained. The
# x value determines how many times the skill can be chained. The y values are
# the skill ID's that may be chained. Note that if the y skills aren't learned,
# they cannot be chained unless they have the <not require learn> tag.
# 
# <chain repeat>
# This allows a chain skill to reselect skills allowing repeats in the list.
# Otherwise, chain skills will have this trait off by default.
# 
# <cannot chain>
# This goes into the noteboxes of skills that you do not wish to appear inside
# of a chain menu at all. Used mostly for open and closed chains that pretty
# much select many skills indiscriminantly.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# <not require learn>
# This allows the character to use this subskill even if the player has not
# yet learned it. Place this tag within any subskill notebox so that it can be
# used whenever desired. This tag also affects forced chains.
# 
# -----------------------------------------------------------------------------
# State Tags - Insert the following tags into State noteboxes.
# -----------------------------------------------------------------------------
# <cost effect phrase +x>
# <cost effect phrase -x>
# <cost effect phrase x%>
# Replace phrase with "HP", "MP", "GOLD", or "RAGE" for the tag to work. If the
# +x or -x value is used at the end, the skill cost will be directly affected
# by that much. If it is x%, the skill cost will be inflated/deflated to x%.
# 
# <cannot use phrase skills>
# Replace phrase with "HP", "MP", "GOLD", or "RAGE" for the tag to work. If the
# state is on a battler, that battler cannot use skills with the cost. Also, if
# the state contains a phrase that matches one of the skill's types, the skill
# also cannot be used so long as the status effect is present.
# 
# <rage rate x%>
# This will set the rage gain rate to x%. If x is 20, then only 20% of the rage
# will be gained. If it is 300, then rage gain rate is 300%.
# 
# <cooldown rate +x> <cooldown rate -x> <cooldown rate x%>
# This tag adjusts the initial cooldown value when using a skill. If the value
# is 50%, then a skill with an originally 20 turn cooldown will only yield a 10
# turn cooldown instead. The + and - values will adjust the values accordingly.
# 
# <reflect type: phrase>
# This will give the status effect reflect properties and bounce back skills of
# the matching phrase skill type. If the state's phrase is "magic" and the used
# skill has a "magic" skill type, then the skill will bounce back at the caster
# for the full effect. Skills with the <unreflectable> tag cannot be reflected.
# 
# -----------------------------------------------------------------------------
# Debug Shortcuts - Only during $TEST and $BTEST mode
# -----------------------------------------------------------------------------
# During testplay mode, pressing F5 inside of the skill menu outside of battle
# will recover all of the actor's MP when the subclass menu is opened.
# 